<Window x:Class="ChatLab.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ChatLab"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        lex:LocalizeDictionary.DesignCulture="en"
        lex:ResxLocalizationProvider.DefaultAssembly="ChatLab.Win"
        lex:ResxLocalizationProvider.DefaultDictionary="Resources"
        mc:Ignorable="d"
        xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:viewmodels="clr-namespace:ChatLab.ViewModels"
        d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}"
        Title="{lex:BLoc Key=ApplicationName}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        WindowStartupLocation="CenterScreen"
        Height="800"
        Width="1200">
    <Window.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <Style x:Key="ButtonIconStyle"
                   TargetType="mat:PackIcon">
                <Setter Property="Height"
                        Value="24" />
                <Setter Property="Width"
                        Value="24" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="FontSize"
                        Value="16" />
            </Style>
            <Style TargetType="Button"
                   BasedOn="{StaticResource MaterialDesignRaisedButton}">
                <Setter Property="Width"
                        Value="100" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ToolBarTray DockPanel.Dock="Top"
                         Grid.Row="0">
                <ToolBar>
                    <Button x:Name="OpenChatButton"
                            Grid.Column="0">
                        <DockPanel>
                            <mat:PackIcon Kind="Chat"
                                          Style="{StaticResource ButtonIconStyle}"
                                          DockPanel.Dock="Left" />
                            <TextBlock Text="{lex:BLoc Key=OpenChat}"
                                       DockPanel.Dock="Left" />
                        </DockPanel>
                    </Button>
                    <Button x:Name="CloseChatButton"
                            Grid.Column="0">
                        <DockPanel>
                            <mat:PackIcon Kind="ChatRemove"
                                          Style="{StaticResource ButtonIconStyle}"
                                          DockPanel.Dock="Left" />
                            <TextBlock Text="{lex:BLoc Key=CloseChat}"
                                       DockPanel.Dock="Left" />
                        </DockPanel>
                    </Button>
                </ToolBar>
            </ToolBarTray>

            <Image Source="{StaticResource DataImage}"
                   Grid.Row="1"
                   DockPanel.Dock="Top"
                   Visibility="{Binding IsImageVisible, Converter={StaticResource BoolToVis}}" />
            <Grid x:Name="ButtonGrid"
                  Grid.Row="2"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  DockPanel.Dock="Bottom">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Button x:Name="StartButton"
                        Grid.Column="0">
                    <DockPanel>
                        <mat:PackIcon Kind="Play"
                                      Style="{StaticResource ButtonIconStyle}"
                                      DockPanel.Dock="Left" />
                        <TextBlock Text="{lex:BLoc Key=Start}"
                                   DockPanel.Dock="Left" />
                    </DockPanel>
                </Button>
                <Button x:Name="StopButton"
                        Grid.Column="2">
                    <DockPanel>
                        <mat:PackIcon Kind="Stop"
                                      Style="{StaticResource ButtonIconStyle}"
                                      DockPanel.Dock="Left" />
                        <TextBlock Text="{lex:BLoc Key=Stop}"
                                   DockPanel.Dock="Left" />
                    </DockPanel>
                </Button>
            </Grid>
        </Grid>
        <DockPanel >
            
        </DockPanel>
        <Border Grid.Column="1"
                Width="{Binding ChatWidth}"
                BorderThickness="1"
                BorderBrush="#FF009384">
            <Grid x:Name="ChatGrid">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ItemsControl Grid.Row="0"
                              ItemsSource="{Binding ChatItems}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border CornerRadius="10"
                                    BorderThickness="0.5"
                                    Padding="5"
                                    Margin="0,0,0,2"
                                    MinWidth="100">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ItemType}"
                                                         Value="Message">
                                                <DataTrigger.Setters>
                                                    <Setter Property="HorizontalAlignment"
                                                            Value="Left" />
                                                    <Setter Property="Background"
                                                            Value="#FF8CE26D" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ItemType}"
                                                         Value="Response">
                                                <DataTrigger.Setters>
                                                    <Setter Property="HorizontalAlignment"
                                                            Value="Right" />
                                                    <Setter Property="Background"
                                                            Value="#FFBAF1EF" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <StackPanel>
                                    
                                    <TextBlock Text="{Binding Text}"
                                               TextWrapping="Wrap" />
                                </StackPanel>
                            </Border>
                            
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                </ItemsControl>
                <DockPanel Grid.Row="1"
                           Margin="0,10,0,0"
                           d:Width="250">
                    <TextBlock Text="{lex:BLoc Key=BusyMessage}" 
                               DockPanel.Dock="Top"
                               d:Visibility="Visible"
                               Visibility="{Binding IsBusy, Converter={StaticResource BoolToVis}}"
                               Margin="5,0,0,0" />
                    <TextBox x:Name="ChatMessageTextBox"
                             Text="{Binding CurrentChatMessage.Message}"
                             DockPanel.Dock="Top"
                             mat:HintAssist.Hint="{lex:BLoc NewMessage}"
                             Style="{StaticResource MaterialDesignOutlinedTextBox}"
                             Margin="0,5,0,0" />
                    <Button x:Name="SendMessageButton"
                            MinWidth="200"
                            Grid.Column="2"
                            Margin="0,7,0,0"
                            mat:ButtonProgressAssist.IsIndeterminate="True"
                            mat:ButtonProgressAssist.IsIndicatorVisible="{Binding IsBusy}"
                            mat:ButtonProgressAssist.Value="-1">
                        <DockPanel>
                            <mat:PackIcon Kind="Send"
                                          Style="{StaticResource ButtonIconStyle}"
                                          DockPanel.Dock="Left" />
                            <TextBlock Text="{lex:BLoc Key=SendMessage}"
                                       DockPanel.Dock="Left" />
                        </DockPanel>
                    </Button>
                </DockPanel>
            </Grid>
        </Border>


    </Grid>
</Window>
